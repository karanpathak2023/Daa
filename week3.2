#include <stdio.h>

// Function to perform selection sort
void selection_sort(int arr[], int size, int *comparisons, int *swaps) {
    *comparisons = 0;
    *swaps = 0;

    for (int i = 0; i < size - 1; i++) {
        int min_index = i;

        // Find the minimum element in the remaining unsorted part
        for (int j = i + 1; j < size; j++) {
            (*comparisons)++;
            if (arr[j] < arr[min_index]) {
                min_index = j;
            }
        }

        // Swap the minimum element with the first unsorted element
        if (min_index != i) {
            int temp = arr[i];
            arr[i] = arr[min_index];
            arr[min_index] = temp;
            (*swaps)++;
        }
    }
}

int main() {
    int T;
    printf("Enter the number of test cases: ");
    scanf("%d", &T);

    for (int t = 0; t < T; t++) {
        int n;
        printf("Enter the size of array: ");
        scanf("%d", &n);

        int arr[n];
        printf("Enter the elements of the array: ");
        for (int i = 0; i < n; i++) {
            scanf("%d", &arr[i]);
        }

        int comparisons = 0, swaps = 0;
        selection_sort(arr, n, &comparisons, &swaps);

        // Print the sorted array
        printf("Sorted array: ");
        for (int i = 0; i < n; i++) {
            printf("%d ", arr[i]);
        }
        printf("\n");

        // Print the total comparisons and swaps
        printf("Comparisons = %d\n", comparisons);
        printf("Swaps = %d\n", swaps);
    }

    return 0;
}
