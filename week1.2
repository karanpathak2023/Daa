#include <stdio.h>

// Binary search function
int binary_search(int arr[], int size, int key, int *comparisons) {
    int low = 0, high = size - 1;
    *comparisons = 0;

    while (low <= high) {
        int mid = low + (high - low) / 2;
        (*comparisons)++;

        if (arr[mid] == key)
            return 1; // Key found
        else if (arr[mid] < key)
            low = mid + 1;
        else
            high = mid - 1;
    }
    return 0; // Key not found
}

int main() {
    int arrays[5][8] = {
        {2, 10, 19, 29, 38, 49},
        {5, 8, 12, 15, 21, 25},
        {30, 35, 45, 50, 55, 60},
        {100, 200, 300, 400, 500, 600},
        {1, 4, 9, 14, 20, 25}
    };
    int keys[5] = {29, 12, 45, 700, 4};
    int sizes[5] = {6, 6, 6, 6, 6};

    for (int i = 0; i < 5; i++) {
        int comparisons = 0;
        printf("Input: ");
        for (int j = 0; j < sizes[i]; j++) {
            printf("%d ", arrays[i][j]);
        }
        printf("\nKey: %d\n", keys[i]);
        int result = binary_search(arrays[i], sizes[i], keys[i], &comparisons);
        if (result)
            printf("Present with %d comparisons\n", comparisons);
        else
            printf("Not Present with %d comparisons\n", comparisons);
    }

    return 0;
}
